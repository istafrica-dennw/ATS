version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ats-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ats-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ollama:
  #   build:
  #     context: ./ollama
  #     dockerfile: Dockerfile
  #   container_name: ats-ollama
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama_data:/root/.ollama
  #   environment:
  #     - OLLAMA_HOST=0.0.0.0
  #     # Model configuration (can be overridden in .env file)
  #     - OLLAMA_MODEL=${OLLAMA_MODEL:-phi3}
  #     - OLLAMA_AUTO_PULL=${OLLAMA_AUTO_PULL:-true}
  #     - OLLAMA_STARTUP_TIMEOUT=${OLLAMA_STARTUP_TIMEOUT:-30}
  #   networks:
  #     - ats-network
  #   restart: unless-stopped
  #   # Optional: GPU support (uncomment if you have NVIDIA GPU)
  #   # deploy:
  #   #   resources:
  #   #     reservations:
  #   #       devices:
  #   #         - driver: nvidia
  #   #           count: 1
  #   #           capabilities: [gpu]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ats-backend
    ports:
      - "8080:8080"
      - "9092:9092"
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_SECURITY_USER_ROLES=${SPRING_SECURITY_USER_ROLES}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - LINKEDIN_CLIENT_ID=${LINKEDIN_CLIENT_ID}
      - LINKEDIN_CLIENT_SECRET=${LINKEDIN_CLIENT_SECRET}
      # Ollama configuration
      # - OLLAMA_BASE_URL=http://ollama:11434
      # - OLLAMA_MODEL=${OLLAMA_MODEL:-phi3}
      - APP_RESUME_ANALYSIS_PROVIDER=${APP_RESUME_ANALYSIS_PROVIDER:-ollama}
    volumes:
      - profile_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      # ollama:
      #   condition: service_started
    networks:
      - ats-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ats-frontend
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_SOCKET_URL=${REACT_APP_SOCKET_URL:-http://localhost:9092}
      - NODE_ENV=development
      - WDS_SOCKET_PORT=0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ats-network
    tty: true
    stdin_open: true

networks:
  ats-network:
    driver: bridge

volumes:
  postgres_data:
    name: ats-system_postgres_data
  profile_uploads:
    name: ats-system_ats_uploads
  ollama_data:
    name: ats-system_ollama_data 